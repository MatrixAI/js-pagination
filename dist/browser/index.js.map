{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Offset.ts","webpack:///./src/Cursor.ts","webpack:///./src/index.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pageIndex","seek","limit","Math","floor","pageCount","total","ceil","pageFirst","index","pageLast","count","pages","Array","from","length","_","pagesI","pageCurr","page","limitNew","pagePrev","indexNew","max","pageNext","pageSeek","pageCurrM","action","processAction","pagePrevM","pageNextM","pageSeekM","patch","result","Promise","then","result_","order","seekAfter","seekBefore","seekFirst","seekLast"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Offset pagination\n *\n * @remarks\n *\n * Offset pagination relies on a seek and limit number.\n *\n * Consider the resource we are paginating is:\n *\n * ```ts\n * ['A', 'B', 'C', 'D']\n * ```\n *\n * The seek index starts at 0.\n * The limit is entire length of the returned pagination view.\n * A seek and limit of `[0, 2]` would return `['A', 'B']`.\n *\n * The page numbers start at 1. So by using `[0, 2]`\n * we get page numbers of `[1, 2]`. We still refer to these numbers\n * with the page index.\n *\n * Note that the total represents the total number of items\n * when the pagination was fetched. The true total of items may have\n * changed on the server side since fetching a pagination.\n */\n\ntype Pagination<I extends Iterable<any>> = Readonly<{\n  seek: number;\n  limit: number;\n  total: number;\n  count: number;\n  items: I;\n}>;\n\ntype Patch = Readonly<{\n  seek: number;\n  limit: number;\n}>;\n\ntype ActionAsync<I> = (seek: number, limit: number) => Promise<ActionResult<I>>;\ntype ActionSync<I> = (seek: number, limit: number) => ActionResult<I>;\ntype ActionResult<I> = Readonly<{\n  total: number,\n  count: number,\n  items: I\n}>;\n\nfunction pageIndex (seek: number, limit: number): number {\n  return Math.floor(seek / limit);\n}\n\nfunction pageCount (total: number, limit: number): number {\n  return Math.ceil(total / limit);\n}\n\nfunction pageFirst (index: number): boolean {\n  return index === 0;\n}\n\nfunction pageLast (index: number, count: number): boolean {\n  return index === (count - 1);\n}\n\nfunction pages (pageCount: number): Array<number> {\n  return Array.from({length: pageCount}, (_, i) => i + 1);\n}\n\nfunction* pagesI (pageCount: number): IterableIterator<number> {\n  for (let i = 1; i <= pageCount; ++i) {\n      yield i;\n  }\n}\n\nfunction pageCurr<I extends Iterable<any>> (\n  page: Pagination<I>,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  const indexNew = pageIndex(page.seek, limitNew);\n  const seekNew = indexNew * limitNew;\n  return {seek: seekNew, limit: limitNew};\n};\n\nfunction pagePrev<I extends Iterable<any>> (\n  page: Pagination<I>,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  let indexNew = pageIndex(page.seek, limitNew);\n  indexNew = Math.max(indexNew - 1, 0);\n  const seekNew = indexNew * limitNew;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pageNext<I extends Iterable<any>> (\n  page: Pagination<I>,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  let indexNew = pageIndex(page.seek, limitNew);\n  indexNew = indexNew + 1;\n  const seekNew = indexNew * limitNew;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pageSeek<I extends Iterable<any>> (\n  page: Pagination<I>,\n  seek: number,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  let indexNew = pageIndex(seek, limitNew);\n  indexNew = Math.max(indexNew, 0);\n  const seekNew = indexNew * limitNew;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pageCurrM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageCurrM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  limit?: number\n): Pagination<I>;\nfunction pageCurrM (page: any, action: any, limit?: any): any {\n  const patch = pageCurr(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pagePrevM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pagePrevM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  limit?: number\n): Pagination<I>;\nfunction pagePrevM (page: any, action: any, limit?: any): any {\n  const patch = pageCurr(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pageNextM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageNextM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  limit?: number\n): Pagination<I>;\nfunction pageNextM (page: any, action: any, limit?: any): any {\n  const patch = pageCurr(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pageSeekM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  seek: number,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageSeekM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  seek: number,\n  limit?: number\n): Pagination<I>;\nfunction pageSeekM (page: any, action: any, seek: any, limit?: any): any {\n  const patch = pageCurr(page, limit);\n  return processAction(action, patch);\n}\n\nfunction processAction<I extends Iterable<any>> (\n  action: ActionAsync<I>,\n  patch: Patch,\n): Promise<Pagination<I>>;\nfunction processAction<I extends Iterable<any>> (\n  action: ActionSync<I>,\n  patch: Patch\n): Pagination<I>;\nfunction processAction (action: any, patch: any): any {\n  const result = action(patch.seek, patch.limit);\n  if (result instanceof Promise) {\n    return result.then((result_) => {\n      return {...patch, ...result_};\n    });\n  } else {\n    return {...patch, ...result};\n  }\n}\n\nexport {\n  Pagination,\n  Patch,\n  ActionAsync,\n  ActionSync,\n  ActionResult,\n  pageIndex,\n  pageCount,\n  pageFirst,\n  pageLast,\n  pages,\n  pagesI,\n  pageCurr,\n  pagePrev,\n  pageNext,\n  pageSeek,\n  pageCurrM,\n  pagePrevM,\n  pageNextM,\n  pageSeekM\n};\n","/**\n * Cursor pagination\n *\n * @remarks\n *\n * Cursor pagination relies on unique orderable seek key.\n *\n * Consider the resource we are paginating is:\n *\n * ```ts\n * ['A', 'B', 'C', 'D']\n * ```\n *\n * Assume that the seek key is `[0, 1, 2, 3]`.\n * Using `order = true`, `seek = 0` and `limit = 2`, you would get `['B', 'C']`.\n * Using `order = false`, `seek = 2` and `limit = 2`, you would get `['A', 'B']`.\n * Using `order = null`, `seekAfter = 1`, `seekBefore = 3`, you would get `['C']`.\n *\n * Cursor pagination does not allow random access of the pages.\n * You can however randomly access if you know the seek key you want.\n */\n\ntype Pagination<I extends Iterable<[S, any]>, S> = Readonly<{\n  order: true;\n  seek: S;\n  limit: number;\n  count: number;\n  seekFirst: S;\n  seekLast: S;\n  items: I;\n} | {\n  order: false;\n  seek: S;\n  limit: number;\n  count: number;\n  seekFirst: S;\n  seekLast: S;\n  items: I;\n} | {\n  order: null;\n  seekAfter: S;\n  seekBefore: S;\n  seekFirst: S;\n  seekLast: S;\n  count: number;\n  items: I;\n}>;\n\ntype PatchSeekLimit<S> = Readonly<{\n  order: boolean,\n  seek: S,\n  limit: number\n}>;\ntype PatchSeekAfterBefore<S> = Readonly<{\n  order: null,\n  seekAfter: S,\n  seekBefore: S\n}>;\n\ntype ActionAsync<I, S> = {\n  (order: boolean, seek: S, limit: number): Promise<ActionResult<I, S>>\n  (order: null, seekAfter: S, seekBefore:S): Promise<ActionResult<I, S>>\n};\ntype ActionSync<I, S> = {\n  (order: boolean, seek: S, limit: number): ActionResult<I, S>\n  (order: null, seekAfter: S, seekBefore: S): ActionResult<I, S>\n};\ntype ActionResult<I, S> = Readonly<{\n  count: number,\n  seekFirst: S,\n  seekLast: S,\n  items: I\n}>;\n\nfunction pageCurr<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  limit?: number\n): PatchSeekLimit<S> | PatchSeekAfterBefore<S> {\n  if (page.order === true) {\n    const limitNew = (limit != null) ? limit : page.limit;\n    return {\n      order: true,\n      seek: page.seek,\n      limit: limitNew\n    };\n  } else if (page.order === false) {\n    const limitNew = (limit != null) ? limit : page.limit;\n    return {\n      order: false,\n      seek: page.seek,\n      limit: limitNew\n    };\n  } else {\n    return {\n      order: null,\n      seekAfter: page.seekAfter,\n      seekBefore: page.seekBefore\n    };\n  }\n}\n\nfunction pagePrev<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  limit?: number\n): PatchSeekLimit<S> {\n  let limitNew;\n  if (page.order === null) {\n    limitNew = (limit != null) ? limit : page.count;\n  } else {\n    limitNew = (limit != null) ? limit : page.limit;\n  }\n  return {\n    order: false,\n    seek: page.seekFirst,\n    limit: limitNew\n  };\n}\n\nfunction pageNext<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  limit?: number\n): PatchSeekLimit<S> {\n  let limitNew;\n  if (page.order === null) {\n    limitNew = (limit != null) ? limit : page.count;\n  } else {\n    limitNew = (limit != null) ? limit : page.limit;\n  }\n  return {\n    order: true,\n    seek: page.seekLast,\n    limit: limitNew\n  };\n}\n\nfunction pageCurrM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionAsync<I, S>,\n  limit?: number\n): Promise<Pagination<I, S>>;\nfunction pageCurrM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionSync<I, S>,\n  limit?: number\n): Pagination<I, S>;\nfunction pageCurrM (page: any, action: any, limit?: any): any {\n  const patch = pageCurr(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pagePrevM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionAsync<I, S>,\n  limit?: number\n): Promise<Pagination<I, S>>;\nfunction pagePrevM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionSync<I, S>,\n  limit?: number\n): Pagination<I, S>;\nfunction pagePrevM (page: any, action: any, limit?: any): any {\n  const patch = pagePrev(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pageNextM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionAsync<I, S>,\n  limit?: number\n): Promise<Pagination<I, S>>;\nfunction pageNextM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionSync<I, S>,\n  limit?: number\n): Pagination<I, S>;\nfunction pageNextM (page: any, action: any, limit?: any): any {\n  const patch = pageNext(page, limit);\n  return processAction(action, patch);\n}\n\nfunction processAction<I extends Iterable<[S, any]>, S> (\n  action: ActionAsync<I, S>,\n  patch: PatchSeekLimit<S> | PatchSeekAfterBefore<S>\n): Promise<Pagination<I, S>>;\nfunction processAction<I extends Iterable<[S, any]>, S> (\n  action: ActionSync<I, S>,\n  patch: PatchSeekLimit<S> | PatchSeekAfterBefore<S>\n): Pagination<I, S>;\nfunction processAction (action: any, patch: any): any {\n  let result;\n  if (patch.order === null) {\n    result = action(patch.order, patch.seekAfter, patch.seekBefore);\n  } else {\n    result = action(patch.order, patch.seek, patch.limit);\n  }\n  if (result instanceof Promise) {\n    return result.then((result_) => ({...patch, ...result_}));\n  } else {\n    return {...patch, ...result};\n  }\n}\n\nexport {\n  Pagination,\n  PatchSeekLimit,\n  PatchSeekAfterBefore,\n  ActionAsync,\n  ActionSync,\n  ActionResult,\n  pageCurr,\n  pagePrev,\n  pageNext,\n  pageCurrM,\n  pagePrevM,\n  pageNextM\n};\n","import * as Offset from './Offset';\nimport * as Cursor from './Cursor';\n\nexport {\n  Offset,\n  Cursor\n};\n"],"sourceRoot":""}