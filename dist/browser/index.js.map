{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Offset.ts","webpack:///./src/Cursor.ts","webpack:///./src/index.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pageIndex","seek","limit","Math","floor","pageCount","total","ceil","pageFirst","index","pageLast","count","pages","Array","from","length","_","pagesI","pageCurr","page","limitNew","pageCurrM","action","processAction","pageCurrRaw","pageCurrRawM","pagePrev","indexNew","max","pagePrevM","pagePrevRaw","pagePrevRawM","pageNext","pageNextM","pageNextRaw","pageNextRawM","pageSeek","pageSeekM","pageSeekRaw","pageSeekRawM","pageJump","pageJumpM","pageJumpRaw","pageJumpRawM","patch","result","Promise","then","result_","items","order","seekAfter","seekBefore","seekFirst","seekLast"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Offset pagination\n */\n\ntype Pagination<I extends Iterable<any>> = Readonly<{\n  seek: number;\n  limit: number;\n  total: number;\n  length: number;\n  items: I;\n}>;\n\ntype Patch = Readonly<{\n  seek: number;\n  limit: number;\n}>;\n\ntype ActionAsync<I> = (seek: number, limit: number) => Promise<ActionResult<I>>;\ntype ActionSync<I> = (seek: number, limit: number) => ActionResult<I>;\ntype ActionResult<I> = Readonly<{\n  total: number,\n  length: number,\n  items: I\n}>;\n\nfunction pageIndex (seek: number, limit: number): number {\n  return Math.floor(seek / limit);\n}\n\nfunction pageCount (total: number, limit: number): number {\n  return Math.ceil(total / limit);\n}\n\nfunction pageFirst (index: number): boolean {\n  return index === 0;\n}\n\nfunction pageLast (index: number, count: number): boolean {\n  return index === (count - 1);\n}\n\nfunction pages (count: number): Array<number> {\n  return Array.from({length: count}, (_, i) => i + 1);\n}\n\nfunction* pagesI (count: number): IterableIterator<number> {\n  for (let i = 1; i <= count; ++i) {\n      yield i;\n  }\n}\n\nfunction pageCurr<I extends Iterable<any>> (\n  page: Pagination<I>,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  const indexNew = pageIndex(page.seek, limitNew);\n  const seekNew = indexNew * limitNew;\n  return {seek: seekNew, limit: limitNew};\n};\n\nfunction pageCurrM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageCurrM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  limit?: number\n): Pagination<I>;\nfunction pageCurrM (page: any, action: any, limit?: any): any {\n  const patch = pageCurr(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pageCurrRaw<I extends Iterable<any>> (\n  page: Pagination<I>,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  const seekNew = page.seek;\n  return {seek: seekNew, limit: limitNew};\n};\n\nfunction pageCurrRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageCurrRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  limit?: number\n): Pagination<I>;\nfunction pageCurrRawM (page: any, action: any, limit?: any): any {\n  const patch = pageCurrRaw(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pagePrev<I extends Iterable<any>> (\n  page: Pagination<I>,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  let indexNew = pageIndex(page.seek, limitNew);\n  indexNew = Math.max(indexNew - 1, 0);\n  const seekNew = indexNew * limitNew;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pagePrevM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pagePrevM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  limit?: number\n): Pagination<I>;\nfunction pagePrevM (page: any, action: any, limit?: any): any {\n  const patch = pagePrev(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pagePrevRaw<I extends Iterable<any>> (\n  page: Pagination<I>,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  const seekNew = page.seek - limitNew;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pagePrevRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pagePrevRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  limit?: number\n): Pagination<I>;\nfunction pagePrevRawM (page: any, action: any, limit?: any): any {\n  const patch = pagePrevRaw(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pageNext<I extends Iterable<any>> (\n  page: Pagination<I>,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  let indexNew = pageIndex(page.seek, limitNew);\n  indexNew = indexNew + 1;\n  const seekNew = indexNew * limitNew;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pageNextM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageNextM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  limit?: number\n): Pagination<I>;\nfunction pageNextM (page: any, action: any, limit?: any): any {\n  const patch = pageNext(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pageNextRaw<I extends Iterable<any>> (\n  page: Pagination<I>,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  const seekNew = page.seek + limitNew;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pageNextRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageNextRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  limit?: number\n): Pagination<I>;\nfunction pageNextRawM (page: any, action: any, limit?: any): any {\n  const patch = pageNextRaw(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pageSeek<I extends Iterable<any>> (\n  page: Pagination<I>,\n  seek: number,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  let indexNew = pageIndex(seek, limitNew);\n  indexNew = Math.max(indexNew, 0);\n  const seekNew = indexNew * limitNew;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pageSeekM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  seek: number,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageSeekM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  seek: number,\n  limit?: number\n): Pagination<I>;\nfunction pageSeekM (page: any, action: any, seek: any, limit?: any): any {\n  const patch = pageSeek(page, seek, limit);\n  return processAction(action, patch);\n}\n\nfunction pageSeekRaw<I extends Iterable<any>> (\n  page: Pagination<I>,\n  seek: number,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  return {seek: seek, limit: limitNew};\n}\n\nfunction pageSeekRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  seek: number,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageSeekRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  seek: number,\n  limit?: number\n): Pagination<I>;\nfunction pageSeekRawM (page: any, action: any, seek: any, limit?: any): any {\n  const patch = pageSeekRaw(page, seek, limit);\n  return processAction(action, patch);\n}\n\nfunction pageJump<I extends Iterable<any>> (\n  page: Pagination<I>,\n  index: number,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  let indexNew = Math.max(index, 0);\n  const seekNew = indexNew * limitNew;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pageJumpM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  seek: number,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageJumpM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  seek: number,\n  limit?: number\n): Pagination<I>;\nfunction pageJumpM (page: any, action: any, index: any, limit?: any): any {\n  const patch = pageJump(page, index, limit);\n  return processAction(action, patch);\n}\n\nfunction pageJumpRaw<I extends Iterable<any>> (\n  page: Pagination<I>,\n  index: number,\n  limit?: number\n): Patch {\n  const limitNew = (limit != null) ? limit : page.limit;\n  let indexNew = Math.max(index, 0);\n  const seekNew = indexNew * page.limit;\n  return {seek: seekNew, limit: limitNew};\n}\n\nfunction pageJumpRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionAsync<I>,\n  seek: number,\n  limit?: number\n): Promise<Pagination<I>>;\nfunction pageJumpRawM<I extends Iterable<any>> (\n  page: Pagination<I>,\n  action: ActionSync<I>,\n  seek: number,\n  limit?: number\n): Pagination<I>;\nfunction pageJumpRawM (page: any, action: any, index: any, limit?: any): any {\n  const patch = pageJumpRaw(page, index, limit);\n  return processAction(action, patch);\n}\n\nfunction processAction<I extends Iterable<any>> (\n  action: ActionAsync<I>,\n  patch: Patch,\n): Promise<Pagination<I>>;\nfunction processAction<I extends Iterable<any>> (\n  action: ActionSync<I>,\n  patch: Patch\n): Pagination<I>;\nfunction processAction (action: any, patch: any): any {\n  const result = action(patch.seek, patch.limit);\n  if (result instanceof Promise) {\n    return result.then((result_) => {\n      return {\n        ...patch,\n        total: result_.total,\n        length: result_.length,\n        items: result_.items\n      }\n    });\n  } else {\n    return {\n      ...patch,\n      total: result.total,\n      length: result.length,\n      items: result.items\n    };\n  }\n}\n\nexport {\n  Pagination,\n  Patch,\n  ActionAsync,\n  ActionSync,\n  ActionResult,\n  pageIndex,\n  pageCount,\n  pageFirst,\n  pageLast,\n  pages,\n  pagesI,\n  pageCurr,\n  pageCurrM,\n  pageCurrRaw,\n  pageCurrRawM,\n  pagePrev,\n  pagePrevM,\n  pagePrevRaw,\n  pagePrevRawM,\n  pageNext,\n  pageNextM,\n  pageNextRaw,\n  pageNextRawM,\n  pageSeek,\n  pageSeekM,\n  pageSeekRaw,\n  pageSeekRawM,\n  pageJump,\n  pageJumpM,\n  pageJumpRaw,\n  pageJumpRawM\n};\n","/**\n * Cursor pagination\n */\n\ntype Pagination<I extends Iterable<[S, any]>, S> = Readonly<{\n  order: true;\n  seek: S;\n  limit: number;\n  length: number;\n  seekFirst: S;\n  seekLast: S;\n  items: I;\n} | {\n  order: false;\n  seek: S;\n  limit: number;\n  length: number;\n  seekFirst: S;\n  seekLast: S;\n  items: I;\n} | {\n  order: null;\n  seekAfter: S;\n  seekBefore: S;\n  seekFirst: S;\n  seekLast: S;\n  length: number;\n  items: I;\n}>;\n\ntype PatchSeekLimit<S> = Readonly<{\n  order: boolean,\n  seek: S,\n  limit: number\n}>;\ntype PatchSeekAfterBefore<S> = Readonly<{\n  order: null,\n  seekAfter: S,\n  seekBefore: S\n}>;\n\ntype ActionAsync<I, S> = {\n  (order: boolean, seek: S, limit: number): Promise<ActionResult<I, S>>\n  (order: null, seekAfter: S, seekBefore:S): Promise<ActionResult<I, S>>\n};\ntype ActionSync<I, S> = {\n  (order: boolean, seek: S, limit: number): ActionResult<I, S>\n  (order: null, seekAfter: S, seekBefore: S): ActionResult<I, S>\n};\ntype ActionResult<I, S> = Readonly<{\n  length: number,\n  seekFirst: S,\n  seekLast: S,\n  items: I\n}>;\n\nfunction pageCurr<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  limit?: number\n): PatchSeekLimit<S> | PatchSeekAfterBefore<S> {\n  if (page.order === true) {\n    const limitNew = (limit != null) ? limit : page.limit;\n    return {\n      order: true,\n      seek: page.seek,\n      limit: limitNew\n    };\n  } else if (page.order === false) {\n    const limitNew = (limit != null) ? limit : page.limit;\n    return {\n      order: false,\n      seek: page.seek,\n      limit: limitNew\n    };\n  } else {\n    return {\n      order: null,\n      seekAfter: page.seekAfter,\n      seekBefore: page.seekBefore\n    };\n  }\n}\n\nfunction pagePrev<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  limit?: number\n): PatchSeekLimit<S> {\n  let limitNew;\n  if (page.order === null) {\n    limitNew = (limit != null) ? limit : page.length;\n  } else {\n    limitNew = (limit != null) ? limit : page.limit;\n  }\n  return {\n    order: false,\n    seek: page.seekFirst,\n    limit: limitNew\n  };\n}\n\nfunction pageNext<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  limit?: number\n): PatchSeekLimit<S> {\n  let limitNew;\n  if (page.order === null) {\n    limitNew = (limit != null) ? limit : page.length;\n  } else {\n    limitNew = (limit != null) ? limit : page.limit;\n  }\n  return {\n    order: true,\n    seek: page.seekLast,\n    limit: limitNew\n  };\n}\n\nfunction pageCurrM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionAsync<I, S>,\n  limit?: number\n): Promise<Pagination<I, S>>;\nfunction pageCurrM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionSync<I, S>,\n  limit?: number\n): Pagination<I, S>;\nfunction pageCurrM (page: any, action: any, limit?: any): any {\n  const patch = pageCurr(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pagePrevM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionAsync<I, S>,\n  limit?: number\n): Promise<Pagination<I, S>>;\nfunction pagePrevM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionSync<I, S>,\n  limit?: number\n): Pagination<I, S>;\nfunction pagePrevM (page: any, action: any, limit?: any): any {\n  const patch = pagePrev(page, limit);\n  return processAction(action, patch);\n}\n\nfunction pageNextM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionAsync<I, S>,\n  limit?: number\n): Promise<Pagination<I, S>>;\nfunction pageNextM<I extends Iterable<[S, any]>, S> (\n  page: Pagination<I, S>,\n  action: ActionSync<I, S>,\n  limit?: number\n): Pagination<I, S>;\nfunction pageNextM (page: any, action: any, limit?: any): any {\n  const patch = pageNext(page, limit);\n  return processAction(action, patch);\n}\n\nfunction processAction<I extends Iterable<[S, any]>, S> (\n  action: ActionAsync<I, S>,\n  patch: PatchSeekLimit<S> | PatchSeekAfterBefore<S>\n): Promise<Pagination<I, S>>;\nfunction processAction<I extends Iterable<[S, any]>, S> (\n  action: ActionSync<I, S>,\n  patch: PatchSeekLimit<S> | PatchSeekAfterBefore<S>\n): Pagination<I, S>;\nfunction processAction (action: any, patch: any): any {\n  let result;\n  if (patch.order === null) {\n    result = action(patch.order, patch.seekAfter, patch.seekBefore);\n  } else {\n    result = action(patch.order, patch.seek, patch.limit);\n  }\n  if (result instanceof Promise) {\n    return result.then((result_) => ({\n      ...patch,\n      length: result_.length,\n      seekFirst: result_.seekFirst,\n      seekLast: result_.seekLast,\n      items: result_.items\n    }));\n  } else {\n    return {\n      ...patch,\n      length: result.length,\n      seekFirst: result.seekFirst,\n      seekLast: result.seekLast,\n      items: result.items\n    };\n  }\n}\n\nexport {\n  Pagination,\n  PatchSeekLimit,\n  PatchSeekAfterBefore,\n  ActionAsync,\n  ActionSync,\n  ActionResult,\n  pageCurr,\n  pagePrev,\n  pageNext,\n  pageCurrM,\n  pagePrevM,\n  pageNextM\n};\n","import * as Offset from './Offset';\nimport * as Cursor from './Cursor';\n\nexport {\n  Offset,\n  Cursor\n};\n"],"sourceRoot":""}